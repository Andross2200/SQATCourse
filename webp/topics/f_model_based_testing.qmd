---
title: 6. Model based testing
author:
  - name: Gabor Arpad Nemeth
    orcid: 0000-0003-2554-9860
    email: nga@inf.elte.hu
    affiliation:
      - name: Eötvös Loránd University (Hungary)
      - department : Computer Algebra
---


![](../images/model_based/Model-based%20testing-1st%20part_0.jpg)

## Original material
This page is a **work-in-progress**, the original materials can be accessed at [ik-elte-sharepoint](no_link)

## Agenda

Short agenda:

1. Theory background of MBT \(Model\-based testing\)
2. FSM \(Finite State Machine\) models
3. Editing specification models with GraphWalker Studio
4. Generate simple test sequences with…
    * GraphWalker Studio and
    * Model >> Test >> Relax

## Degree of automization 


```{mermaid}
graph TD
    classDef sub opacity:0
    classDef note fill:#ffd, stroke:#ccb
    
     A(Degree of automatization) --> B(from the view of test execution) --> C(Manual / Automated)
  A --> D(from the view of the test design) --> E(Manually designed) --> F(Generated)
       
    subgraph subE [" "]
        E
        noteE[ Test cases are designed by a test engineer based on specification]
    end

    subgraph subF [" "]
        F
        noteF[ Test cases are generated automatically from a test model or from the specification -> MBT Model Based Testing]
    end
    
    class subA,subB,subC sub
    class noteA,noteB,noteC note


```

## Model based testing

Conformance testing
  
  * Given
      * Specification model (white box)
      * Implementation model (black box)
  * Test if the implementation conforms to the specification?
      * I.E. determine if the two corresponding model descriptions are equivalent 

```{mermaid}
graph TD
    classDef sub opacity:0
    classDef note fill:#ffd, stroke:#ccb
    
     A <--> B --> C
     B --> D 

    subgraph subA [" "]
        A
        noteE[Specification model]
    end

    subgraph subB [" "]
        B
        noteF[Implementation model]
    end

```


## FSM (Formal specification model)


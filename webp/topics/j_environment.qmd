---
title: 9. Environment setup
format:
    html:
        toc: true
---

## Supporting video
{{< video https://youtu.be/4-8p-MguKH0
    title='Environment setup - docker' 
>}}

## Setting up gradle - Arch Linux
First things first you need to install ```docker``` first. To do it you will have to consult ```pacman``` with the following command ```sudo pacman -S docker```. After it has installed everything for you it is optional but sometimes handy to install ```docker-compose``` as well. To do that, run ```sudo pacman -S docker-compose```. 

After [docker](https://www.docker.com/) has been installed on your system, pull the gradle image as written [here](https://hub.docker.com/_/gradle/) by running ```sudo docker pull gradle```.


The previous steps can be done on

1. [Ubuntu](https://docs.docker.com/engine/install/ubuntu/)
2. [Mac](https://docs.docker.com/desktop/setup/install/mac-install/)
3. [Windows](https://docs.docker.com/desktop/setup/install/windows-install/), I'd suggest to use WSL2 on windows if it is possible, makes life a bit easier.

## Supporting video
{{< video https://youtu.be/UcLXq-HaSUg
    title='Environment setup - running the samples' 
>}}

## Running the samples - Arch Linux
When docker based gradle is fetched you can run the commands from the editor of choice. Since I show the examples in [VSCode](https://code.visualstudio.com/) I would suggest using it. As it is written on the [gradle docker webpage](https://hub.docker.com/_/gradle/) you can run the examples from the sample's root directory, by running the command ```docker run --rm -u gradle -v "$PWD":/home/gradle/project -w /home/gradle/project gradle gradle <gradle-task>```.